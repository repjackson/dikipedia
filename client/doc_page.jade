template(name='doc_page')
    with current_doc
        .ui.stackable.padded.grid 
            .middle.aligned.row
                .four.wide.center.aligned.column 
                    a.ui.circular.icon.large.button(href="/")
                        i.left.chevron.big.icon
                .eight.wide.column 
                    .ui.center.aligned.big.header(class=emotion_color_class) !{title}
                .four.wide.column 
            .row
                .twelve.wide.column 
                    //- if watson.metadata.image 
                    //-     unless is_video
                    //-         a(href=watson.metadata.image target='_window')
                    //-             img.ui.centered.image.rounded.pointer.call_visual(src=watson.metadata.image)
                    .scrolling
                        if wiki_html
                            |!{wiki_html.content}
                            //- if rd.selftext_html
                            //-     //- unless tone
                            //-     //- .content
                            //-     |!{parsed_selftext_html}
                            //-     //- |!{rd.selftext_html}
                        else
                            if tone
                                //- .scrolling
                                +tone
                            //- else
                        //- if rd.selftext
                        //-     .content
                        //-         +markdown
                        //-             !{rd.selftext}
                
                    //- +session_edit_value_button key='view_tone' value=false label='plain'

                    if tags
                        //- .ui.styled.accordion
                        //- .active.title
                        .ui.header #{tags.length} tags
                        //- i.dropdown.icon
                        //- .active.content
                        each tags
                            .ui.circular.large.label
                                |#{this}
                    if watson
                        +watson_view
                        
                .four.wide.column 
                    //- if has_thumb
                    .meta
                        if watson.metadata.image 
                            a(href=watson.metadata.image target='_window')
                                img.ui.centered.image.rounded.pointer.call_visual(src=watson.metadata.image)
                        
                        .ui.header #{publish_when}
                        if url
                            a.ui.small.center.aligned.grey.header(href=url target='_window')
                                |#{url}
                            .spacer
                        
                        a.ui.circular.button(href=url target='_window')
                            i.external.icon
                            |view link
                        //- span.ui.grey.text #{domain}
                        if author
                            a.ui.button(href="https://www.reddit.com/user/#{author}" target='_window')
                                i.pencil.icon
                                |#{author}
                        //- i.refresh.circular.link.icon.calc_post
                        //- a.ui.circular.button(href="https://www.reddit.com/#{permalink}" target="_blank" title='view reddit comments')
                        //-     i.chat.outline.large.icon
                        //-     |#{comment_count}
                        if publish_when
                            .ui.circular.button
                                //- i.calendar.icon
                                //- |#{watson.metadata.publication_date}
                                |#{publish_when}
                        div
                        //- +voting_full
                    .ui.circular.button.call_wiki 
                        i.wikipedia.icon
                        |call wiki
                    .ui.circular.button.call_watson 
                        i.chess.icon
                        |tag url
                    .ui.circular.button.call_watson_image
                        i.chess.icon
                        |tag image
                    .ui.circular.button.pull_tone
                        i.download.icon
                        |download content
                    .ui.circular.button.print_me
                        |print me
                    

template(name='emotion_circle')
    .ui.circular.label(class=emotion_circle_class title=emotion)
        span {{ to_percent percent }}
            //- if label 
            //-     |#{label}
            //- else 
            //-     |#{emotion}
        
