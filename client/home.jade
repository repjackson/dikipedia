template(name='home')
    .ui.stackable.padded.grid
        .row
            .three.wide.column
                .ui.header dikipedia
            .sixteen.wide.column
                each selected_tags
                    button.ui.active.compact.circular.button.unselect_tag(tabindex="0" class="#{loading_class} #{active_term_class}")
                        if term.image
                            img.ui.mini.inline.image(src=term.image class=active_term_class)
                        .ui.inline.small.header #{this}
                        //- button.ui.active.large.circular.button.unselect_tag(tabindex='0' style=background_style class=emotion_color)
                //- .ui.inline.small.header(class=emotion_color) {{fixed omega_doc.current_max_emotion_percent}}% #{omega_doc.current_most_emotion}
                        
                .ui.left.icon.search.small.input
                    unless is_loading
                        if home_subs_ready
                            i.search.link.icon.refresh_agg
                    unless home_subs_ready
                        i.yin.yang.big.loading.link.icon.reconnect
                    if is_loading
                        i.yin.yang.big.loading.large.icon
                    //- input#search(type='text' autofocus='' autocomplete="off" value=current_query)
                    input#search(type='text' autofocus='' autocomplete="off")
                //- .ui.header #{connection.status}
                //- div
                unless connected
                    //- .ui.header disconnected
                    //- .ui.hidden.divider
                    i.lightning.invert.yellow.big.circular.link.icon
                //- div
                if connected
                    each agg_tags
                        +agg_tag
            .four.wide.right.aligned.column
                //- .spacer
                //- .ui.small.grey.header media
                //- .spacer
                //- .ui.small.grey.header
                //-     i.brain.icon
                //-     |emotions
                each selected_emotions
                    .ui.compact.circular.active.large.button.unselect_emotion #{this}
                each emotion_results
                    if title.length
                        .ui.compact.circular.large.button.select_emotion(class=emotion_selector_class)
                            small #{count}
                            |#{title}
            .twelve.wide.column.scrolling
                //- .ui.selection.list
                each doc_results
                    +doc_list_item
                    .spacer
                    
                    
template(name='agg_tag')
    button.ui.circular.compact.button.result(tabindex="0" title=count)
        if term.image
            //- button.ui.compact.circular.button(tabindex="0" title=count)
            //- img.ui.mini.inline.image(src=term.image)
            img.ui.avatar.image(src=term.image)
            .ui.inline.small.thin.header(class=tag_result_class) #{title}
        else
            //- button.ui.compact.circular.button(tabindex="0" title=count)
            .ui.inline.small.thin.header(class=tag_result_class) #{title}

        //- small #{count}
                    
